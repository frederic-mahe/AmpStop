leftprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("Left", "LeftSeq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
rightprimers <- setNames(data.frame(matrix(ncol = 7, nrow = 0)), c("Right", "RightSeq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
allprimers <- setNames(data.frame(matrix(ncol = 7, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/")
library(devtools)
install("AmpStop")
blast_candidate_oligos(blastn_path="/Users/imacuser/ncbi-blast-2.7.1+/bin/blastn", blastdb="./Unite_s_011217/UNITE_s_011217", candidates="Candidate_oligos.fasta", percid=25, wordsize=7)
library(AmpStop)
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/Testing/")
blast_candidate_oligos(blastn_path="/Users/imacuser/ncbi-blast-2.7.1+/bin/blastn", blastdb="./Unite_s_011217/UNITE_s_011217", candidates="Candidate_oligos.fasta", percid=25, wordsize=7)
candidates="Candidate_oligos.fasta"
blastoutput="Candidate_vs_UNITE.out"
# Make temporary file to store split blast results
dir.create("./TempFolder")
# Get the query file into a data frame
kmers <- grep('kmer', readLines(candidates), value=T)
seqs <- grep('kmer', readLines(candidates), value=T, invert=T)
kmers <-as.data.frame(kmers)
seqs <- as.data.frame(seqs)
kmers <- cbind(kmers,seqs)
## Grep the blast result and return the total number of hits, put in dataframe
grepreturn <- grep('hits found', readLines(blastoutput), value=T)
df <- as.data.frame(grepreturn)
df2 <- separate(df, grepreturn, c("hash", "numhits", "hits", "found"), " ")
# Divide the blast results into the different kmers in individual temporary files
blastoutputlines <- readLines(blastoutput)
nlines <- length(blastoutputlines)
queryline <- 0
for(i in 1:nlines){
if(grepl("Query", blastoutputlines[i])){
# Make a new file in the temp directory for each kmer
currentline <- blastoutputlines[i]
kmernumber <- strsplit(currentline, split=" ")[[1]][3]
queryline <- 0
outfilename <- paste("./TempFolder/",kmernumber,".txt", sep="")
file.create(outfilename)
next
}
if(queryline == 1){
# Get the headers into the output file
currentline <- blastoutputlines[i]
csfields <- strsplit(currentline, ":")[[1]][2]
fields <- paste(strsplit(csfields, ", ")[[1]], collapse="\t")
write(fields,file=outfilename)
queryline = queryline + 1
next
}
if(queryline > 2){
# After skipping the 3rd line (hits found) add the rest of the lines for the query, except for the commented line bfore the next "Query" line
currentline <- blastoutputlines[i]
if(grepl("#", currentline)){
queryline = queryline + 1
next
}
write(currentline,file=outfilename,append=TRUE)
queryline = queryline + 1
next
}
queryline = queryline + 1
}
numcandidates <- length(row.names(kmers))
allprimers <- setNames(data.frame(matrix(ncol = 7, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",j,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",j,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(j, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(leftprimers) + 1,] <- newline
}
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",j,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",j,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(j, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(leftprimers) + 1,] <- newline
}
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",j,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",j,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(j, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
View(allprimers)
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(j, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(j, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
View(allprimers)
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[j]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
View(allprimers)
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits identical positions >Y", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
View(allprimers)
outputgraph="Oligos_Plot.pdf"
outputfile="OligoPairs_Table.txt"
outputgraph="Oligos_Plot.pdf"
outputfile="Oligos_Table.txt"
write.table(allprimers, file=outputfile, sep="\t", row.names=F)
View(df2)
library(ggpubr)
devtools::install_github("kassambara/ggpubr")
library(ggpubr)
ggplot(allprimers, aes(x=kmer, y=HitsTotal)) + geom_point()
class(allprimers$HitsTotal)
class(allprimers$kmer)
p <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsIdenticalPositions))) + geom_point()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsThreePrime))) + geom_point()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + theme_classic()
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point()+ theme_classic()
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ theme_classic()
ggarrange(a,b,c, ncol=1, nrow=3)
ggarrange(a,b,c, labels = c("A","B","C"), ncol=1, nrow=3)
?ggboxplot
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab(label="kmer") + ylab(label="Total Hits") + theme_classic()
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point() + xlab(label="kmer") + ylab(label="Hits > 90% primer length")  + theme_classic()
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ + xlab(label="kmer") + ylab(label="Hits aligned at 3' End")  + theme_classic()
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic()
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic()
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ + xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic()
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic()
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic()
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic()
ggarrange(a,b,c, labels = c("A","B","C"), ncol=1, nrow=3)
pdf(file=outputgraph)
ggarrange(a,b,c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dotted", color = "blue", size=1.5)
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dotted", color = "blue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dotted", color = "blue", size=1.5)
?geom_vline
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "blue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "blue", size=1.5)
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "light blue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "light red", size=1.5)
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "deepskyblue1", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits identical positions >Y`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph)
ggarrange(a,b,c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
?pdf
pdf(file=outputgraph, height=10)
ggarrange(a,b,c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("x.text"),b+ rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
ggarrange(a+ rremove("x.text"),b+ rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
?rremove
ggarrange(a+ rremove("xlab","x.text"),b+ rremove("xlab","x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits >90% aligned length", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
write.table(allprimers, file=outputfile, sep="\t", row.names=F)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits >90% aligned length`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
unlink("./TempFolder", recursive=TRUE)
getwd()
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/")
document()
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/")
install("AmpStop")
library(AmpStop)
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/Testing/")
get_candidate_oligos(nontarget="Athaliana_ITS1_new_wholelength.fasta")
blast_candidate_oligos(blastn_path="/Users/imacuser/ncbi-blast-2.7.1+/bin/blastn", blastdb="./Unite_s_011217/UNITE_s_011217", candidates="Candidate_oligos.fasta")
check_candidate_oligos(candidates="Candidate_oligos.fasta", blastoutput="Candidate_vs_UNITE.out")
candidates="Candidate_oligos.fasta"
blastoutput="Candidate_vs_UNITE.out"
# Get the query file into a data frame
kmers <- grep('kmer', readLines(candidates), value=T)
seqs <- grep('kmer', readLines(candidates), value=T, invert=T)
kmers <-as.data.frame(kmers)
seqs <- as.data.frame(seqs)
kmers <- cbind(kmers,seqs)
## Grep the blast result and return the total number of hits, put in dataframe
grepreturn <- grep('hits found', readLines(blastoutput), value=T)
df <- as.data.frame(grepreturn)
df2 <- separate(df, grepreturn, c("hash", "numhits", "hits", "found"), " ")
# Divide the blast results into the different kmers in individual temporary files
dir.create("./TempFolder")
blastoutputlines <- readLines(blastoutput)
nlines <- length(blastoutputlines)
queryline <- 0
for(i in 1:nlines){
if(grepl("Query", blastoutputlines[i])){
# Make a new file in the temp directory for each kmer
currentline <- blastoutputlines[i]
kmernumber <- strsplit(currentline, split=" ")[[1]][3]
queryline <- 0
outfilename <- paste("./TempFolder/",kmernumber,".txt", sep="")
file.create(outfilename)
next
}
if(queryline == 1){
# Get the headers into the output file
currentline <- blastoutputlines[i]
csfields <- strsplit(currentline, ":")[[1]][2]
fields <- paste(strsplit(csfields, ", ")[[1]], collapse="\t")
write(fields,file=outfilename)
queryline = queryline + 1
next
}
if(queryline > 2){
# After skipping the 3rd line (hits found) add the rest of the lines for the query, except for the commented line bfore the next "Query" line
currentline <- blastoutputlines[i]
if(grepl("#", currentline)){
queryline = queryline + 1
next
}
write(currentline,file=outfilename,append=TRUE)
queryline = queryline + 1
next
}
queryline = queryline + 1
}
numcandidates <- length(row.names(kmers))
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits >90% aligned length", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
allprimers$kmer <- as.numeric(allprimers$kmer)
OnethirdL <- floor((1/3) * numcandidates)
TwothirdL <- floor((2/3) * numcandidates)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
a
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits >90% aligned length`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
class(allprimers$kmer)
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits >90% aligned length", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
OnethirdL <- floor((1/3) * numcandidates)
TwothirdL <- floor((2/3) * numcandidates)
allprimers$kmer <- as.numeric(allprimers$kmer)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits >90% aligned length`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
?pdf
getwd()
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/")
install("AmpStop")
install("AmpStop")
library(AmpStop)
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/")
check_candidate_oligos(candidates="Candidate_oligos.fasta", blastoutput="Candidate_vs_UNITE.out")
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/Testing/")
check_candidate_oligos(candidates="Candidate_oligos.fasta", blastoutput="Candidate_vs_UNITE.out")
detach("pacage:AmpStop", unload=TRUE)
detach("package:AmpStop", unload=TRUE)
check_candidate_oligos <- function(candidates, blastoutput, outputgraph="Oligos_Plot.pdf", outputfile="OligoPairs_Table.txt"){
# Get the query file into a data frame
kmers <- grep('kmer', readLines(candidates), value=T)
seqs <- grep('kmer', readLines(candidates), value=T, invert=T)
kmers <-as.data.frame(kmers)
seqs <- as.data.frame(seqs)
kmers <- cbind(kmers,seqs)
## Grep the blast result and return the total number of hits, put in dataframe
grepreturn <- grep('hits found', readLines(blastoutput), value=T)
df <- as.data.frame(grepreturn)
df2 <- separate(df, grepreturn, c("hash", "numhits", "hits", "found"), " ")
# Divide the blast results into the different kmers in individual temporary files
# dir.create("./TempFolder")
blastoutputlines <- readLines(blastoutput)
nlines <- length(blastoutputlines)
queryline <- 0
# for(i in 1:nlines){
#
#   if(grepl("Query", blastoutputlines[i])){
#     # Make a new file in the temp directory for each kmer
#     currentline <- blastoutputlines[i]
#     kmernumber <- strsplit(currentline, split=" ")[[1]][3]
#     queryline <- 0
#     outfilename <- paste("./TempFolder/",kmernumber,".txt", sep="")
#     file.create(outfilename)
#     next
#   }
#
#   if(queryline == 1){
#     # Get the headers into the output file
#     currentline <- blastoutputlines[i]
#     csfields <- strsplit(currentline, ":")[[1]][2]
#     fields <- paste(strsplit(csfields, ", ")[[1]], collapse="\t")
#     write(fields,file=outfilename)
#     queryline = queryline + 1
#     next
#   }
#
#   if(queryline > 2){
#     # After skipping the 3rd line (hits found) add the rest of the lines for the query, except for the commented line bfore the next "Query" line
#     currentline <- blastoutputlines[i]
#     if(grepl("#", currentline)){
#       queryline = queryline + 1
#       next
#     }
#     write(currentline,file=outfilename,append=TRUE)
#     queryline = queryline + 1
#     next
#   }
#   queryline = queryline + 1
# }
numcandidates <- length(row.names(kmers))
# Now, get the stats for each potential oligo
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits >90% aligned length", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
allprimers$kmer <- as.numeric(allprimers$kmer)
write.table(allprimers, file=outputfile, sep="\t", row.names=F)
# Print a graph with the 3 different hit counts per candidate oligos
OnethirdL <- floor((1/3) * numcandidates)
TwothirdL <- floor((2/3) * numcandidates)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits >90% aligned length`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph, height=10)
ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3)
dev.off()
# Remove the temporary directory:
# unlink("./TempFolder", recursive=TRUE)
}
check_candidate_oligos(candidates="Candidate_oligos.fasta", blastoutput="Candidate_vs_UNITE.out")
check_candidate_oligos <- function(candidates, blastoutput, outputgraph="Oligos_Plot.pdf", outputfile="OligoPairs_Table.txt"){
# Get the query file into a data frame
kmers <- grep('kmer', readLines(candidates), value=T)
seqs <- grep('kmer', readLines(candidates), value=T, invert=T)
kmers <-as.data.frame(kmers)
seqs <- as.data.frame(seqs)
kmers <- cbind(kmers,seqs)
## Grep the blast result and return the total number of hits, put in dataframe
grepreturn <- grep('hits found', readLines(blastoutput), value=T)
df <- as.data.frame(grepreturn)
df2 <- separate(df, grepreturn, c("hash", "numhits", "hits", "found"), " ")
# Divide the blast results into the different kmers in individual temporary files
# dir.create("./TempFolder")
blastoutputlines <- readLines(blastoutput)
nlines <- length(blastoutputlines)
queryline <- 0
# for(i in 1:nlines){
#
#   if(grepl("Query", blastoutputlines[i])){
#     # Make a new file in the temp directory for each kmer
#     currentline <- blastoutputlines[i]
#     kmernumber <- strsplit(currentline, split=" ")[[1]][3]
#     queryline <- 0
#     outfilename <- paste("./TempFolder/",kmernumber,".txt", sep="")
#     file.create(outfilename)
#     next
#   }
#
#   if(queryline == 1){
#     # Get the headers into the output file
#     currentline <- blastoutputlines[i]
#     csfields <- strsplit(currentline, ":")[[1]][2]
#     fields <- paste(strsplit(csfields, ", ")[[1]], collapse="\t")
#     write(fields,file=outfilename)
#     queryline = queryline + 1
#     next
#   }
#
#   if(queryline > 2){
#     # After skipping the 3rd line (hits found) add the rest of the lines for the query, except for the commented line bfore the next "Query" line
#     currentline <- blastoutputlines[i]
#     if(grepl("#", currentline)){
#       queryline = queryline + 1
#       next
#     }
#     write(currentline,file=outfilename,append=TRUE)
#     queryline = queryline + 1
#     next
#   }
#   queryline = queryline + 1
# }
numcandidates <- length(row.names(kmers))
# Now, get the stats for each potential oligo
allprimers <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("kmer", "Seq","HitsTotal", "Hits >90% aligned length", "Hits alignd at 3' End"))
for(i in 1:numcandidates){
sequence <- as.character(kmers$seqs[which(kmers$kmers==paste(">kmer_",i,sep=""))])
HitsTotal <- as.numeric(df2$numhits)[i]
maxalignlength <- 0.9 * nchar(sequence)
filename <- paste("./TempFolder/kmer_",i,".txt", sep="")
kmertable <- read.table(file=filename, header=T, sep="\t")
HitsThreePrime <- length(which(kmertable$q..end > (nchar(sequence) - 3)))
HitsIdenticalPositions <- length(which(kmertable$identical > maxalignlength))
newline <- c(i, sequence, HitsTotal, HitsIdenticalPositions, HitsThreePrime)
allprimers[nrow(allprimers) + 1,] <- newline
}
allprimers$kmer <- as.numeric(allprimers$kmer)
write.table(allprimers, file=outputfile, sep="\t", row.names=F)
# Print a graph with the 3 different hit counts per candidate oligos
OnethirdL <- floor((1/3) * numcandidates)
TwothirdL <- floor((2/3) * numcandidates)
a <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(HitsTotal))) + geom_point() + xlab("kmer") + ylab("Total Hits") + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
b <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits >90% aligned length`))) + geom_point() + xlab("kmer") + ylab("Hits > 90% primer length")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
c <- ggplot(allprimers, aes(x=as.numeric(kmer), y=as.numeric(`Hits alignd at 3' End`))) + geom_point()+ xlab("kmer") + ylab("Hits aligned at 3' End")  + theme_classic() + geom_vline(xintercept = OnethirdL, linetype="dashed", color = "dodgerblue", size=1.5) + geom_vline(xintercept = TwothirdL, linetype="dashed", color = "coral2", size=1.5)
pdf(file=outputgraph, height=10)
print(ggarrange(a+ rremove("xlab")+rremove("x.text"),b+ rremove("xlab")+rremove("x.text"),c, labels = c("A","B","C"), ncol=1, nrow=3))
dev.off()
# Remove the temporary directory:
# unlink("./TempFolder", recursive=TRUE)
}
check_candidate_oligos(candidates="Candidate_oligos.fasta", blastoutput="Candidate_vs_UNITE.out")
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/")
install("AmpStop")
library(AmpStop)
setwd("/Volumes/Seagate/NewLabStuff/Research/MPIPZ/KemenLab/MethodsPaper/AmpStop/Testing/")
unlink("./TempFolder/", recursive=TRUE)
